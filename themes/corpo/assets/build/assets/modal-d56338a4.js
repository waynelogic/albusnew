class n{constructor(t,s={}){if(this.modal=null,t instanceof HTMLElement&&(this.modal=t),typeof t=="string"&&(this.modal=document.querySelector(t)),this.modal===null)return console.log("Элемент не найден");this.modalContent=this.modal.querySelector(".modal-content");const e={autoOpen:!0,showClass:"show",afterShown:()=>{},afterClose:()=>{this.destroy()},afterOpen:()=>{},beforeClose:()=>{}};this.options={...e,...s},this.modal.addEventListener("click",({target:i})=>{i.dataset.close!=null&&(this.toggle(),this.options.afterClose())}),this.elements={modal:this.modal,header:this.modal.querySelector("[data-modal-header]"),content:this.modal.querySelector("[data-modal-content]"),footer:this.modal.querySelector("[data-modal-footer]")},this.options.autoOpen&&this.toggle()}isShown(){return this.modal.classList.contains(this.options.showClass)}toggle(){const t=this.isShown();this.modal.classList.toggle(this.options.showClass,!t),t||this.options.afterShown({instance:this,elements:this.elements})}destroy(){delete this}}function a(o){const t=o.dataset.modal;if(t===void 0)return console.log("Вы не настроили кнопку модального окна");o.addEventListener("click",()=>{new n(t)})}export{n as Modal,a as default};
